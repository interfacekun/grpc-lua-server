// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "services.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace services {

namespace {

const ::google::protobuf::Descriptor* ServiceMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_services_2eproto() {
  protobuf_AddDesc_services_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "services.proto");
  GOOGLE_CHECK(file != NULL);
  ServiceMsg_descriptor_ = file->message_type(0);
  static const int ServiceMsg_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceMsg, playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceMsg, protoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceMsg, logid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceMsg, returncode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceMsg, payload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceMsg, clanid_),
  };
  ServiceMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServiceMsg_descriptor_,
      ServiceMsg::default_instance_,
      ServiceMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServiceMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceMsg, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_services_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServiceMsg_descriptor_, &ServiceMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_services_2eproto() {
  delete ServiceMsg::default_instance_;
  delete ServiceMsg_reflection_;
}

void protobuf_AddDesc_services_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016services.proto\022\010services\"s\n\nServiceMsg"
    "\022\020\n\010PlayerId\030\001 \001(\004\022\017\n\007ProtoId\030\002 \001(\r\022\r\n\005L"
    "ogId\030\003 \001(\r\022\022\n\nReturnCode\030\004 \001(\005\022\017\n\007Payloa"
    "d\030\005 \001(\014\022\016\n\006ClanId\030\006 \001(\0042I\n\013GameService\022:"
    "\n\006Stream\022\024.services.ServiceMsg\032\024.service"
    "s.ServiceMsg\"\000(\0010\001b\006proto3", 226);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "services.proto", &protobuf_RegisterTypes);
  ServiceMsg::default_instance_ = new ServiceMsg();
  ServiceMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_services_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_services_2eproto {
  StaticDescriptorInitializer_services_2eproto() {
    protobuf_AddDesc_services_2eproto();
  }
} static_descriptor_initializer_services_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceMsg::kPlayerIdFieldNumber;
const int ServiceMsg::kProtoIdFieldNumber;
const int ServiceMsg::kLogIdFieldNumber;
const int ServiceMsg::kReturnCodeFieldNumber;
const int ServiceMsg::kPayloadFieldNumber;
const int ServiceMsg::kClanIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceMsg::ServiceMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:services.ServiceMsg)
}

void ServiceMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ServiceMsg::ServiceMsg(const ServiceMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:services.ServiceMsg)
}

void ServiceMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  playerid_ = GOOGLE_ULONGLONG(0);
  protoid_ = 0u;
  logid_ = 0u;
  returncode_ = 0;
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clanid_ = GOOGLE_ULONGLONG(0);
}

ServiceMsg::~ServiceMsg() {
  // @@protoc_insertion_point(destructor:services.ServiceMsg)
  SharedDtor();
}

void ServiceMsg::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ServiceMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceMsg_descriptor_;
}

const ServiceMsg& ServiceMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2eproto();
  return *default_instance_;
}

ServiceMsg* ServiceMsg::default_instance_ = NULL;

ServiceMsg* ServiceMsg::New(::google::protobuf::Arena* arena) const {
  ServiceMsg* n = new ServiceMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceMsg::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ServiceMsg*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(playerid_, logid_);
  ZR_(clanid_, returncode_);
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ServiceMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:services.ServiceMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 PlayerId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ProtoId;
        break;
      }

      // optional uint32 ProtoId = 2;
      case 2: {
        if (tag == 16) {
         parse_ProtoId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protoid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LogId;
        break;
      }

      // optional uint32 LogId = 3;
      case 3: {
        if (tag == 24) {
         parse_LogId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ReturnCode;
        break;
      }

      // optional int32 ReturnCode = 4;
      case 4: {
        if (tag == 32) {
         parse_ReturnCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &returncode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Payload;
        break;
      }

      // optional bytes Payload = 5;
      case 5: {
        if (tag == 42) {
         parse_Payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ClanId;
        break;
      }

      // optional uint64 ClanId = 6;
      case 6: {
        if (tag == 48) {
         parse_ClanId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clanid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:services.ServiceMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:services.ServiceMsg)
  return false;
#undef DO_
}

void ServiceMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:services.ServiceMsg)
  // optional uint64 PlayerId = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // optional uint32 ProtoId = 2;
  if (this->protoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->protoid(), output);
  }

  // optional uint32 LogId = 3;
  if (this->logid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->logid(), output);
  }

  // optional int32 ReturnCode = 4;
  if (this->returncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->returncode(), output);
  }

  // optional bytes Payload = 5;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->payload(), output);
  }

  // optional uint64 ClanId = 6;
  if (this->clanid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->clanid(), output);
  }

  // @@protoc_insertion_point(serialize_end:services.ServiceMsg)
}

::google::protobuf::uint8* ServiceMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:services.ServiceMsg)
  // optional uint64 PlayerId = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // optional uint32 ProtoId = 2;
  if (this->protoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->protoid(), target);
  }

  // optional uint32 LogId = 3;
  if (this->logid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->logid(), target);
  }

  // optional int32 ReturnCode = 4;
  if (this->returncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->returncode(), target);
  }

  // optional bytes Payload = 5;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->payload(), target);
  }

  // optional uint64 ClanId = 6;
  if (this->clanid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->clanid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:services.ServiceMsg)
  return target;
}

int ServiceMsg::ByteSize() const {
  int total_size = 0;

  // optional uint64 PlayerId = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // optional uint32 ProtoId = 2;
  if (this->protoid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->protoid());
  }

  // optional uint32 LogId = 3;
  if (this->logid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->logid());
  }

  // optional int32 ReturnCode = 4;
  if (this->returncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->returncode());
  }

  // optional bytes Payload = 5;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // optional uint64 ClanId = 6;
  if (this->clanid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clanid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServiceMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceMsg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceMsg::MergeFrom(const ServiceMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.protoid() != 0) {
    set_protoid(from.protoid());
  }
  if (from.logid() != 0) {
    set_logid(from.logid());
  }
  if (from.returncode() != 0) {
    set_returncode(from.returncode());
  }
  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.clanid() != 0) {
    set_clanid(from.clanid());
  }
}

void ServiceMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceMsg::CopyFrom(const ServiceMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceMsg::IsInitialized() const {

  return true;
}

void ServiceMsg::Swap(ServiceMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceMsg::InternalSwap(ServiceMsg* other) {
  std::swap(playerid_, other->playerid_);
  std::swap(protoid_, other->protoid_);
  std::swap(logid_, other->logid_);
  std::swap(returncode_, other->returncode_);
  payload_.Swap(&other->payload_);
  std::swap(clanid_, other->clanid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceMsg_descriptor_;
  metadata.reflection = ServiceMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServiceMsg

// optional uint64 PlayerId = 1;
void ServiceMsg::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ServiceMsg::playerid() const {
  // @@protoc_insertion_point(field_get:services.ServiceMsg.PlayerId)
  return playerid_;
}
 void ServiceMsg::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:services.ServiceMsg.PlayerId)
}

// optional uint32 ProtoId = 2;
void ServiceMsg::clear_protoid() {
  protoid_ = 0u;
}
 ::google::protobuf::uint32 ServiceMsg::protoid() const {
  // @@protoc_insertion_point(field_get:services.ServiceMsg.ProtoId)
  return protoid_;
}
 void ServiceMsg::set_protoid(::google::protobuf::uint32 value) {
  
  protoid_ = value;
  // @@protoc_insertion_point(field_set:services.ServiceMsg.ProtoId)
}

// optional uint32 LogId = 3;
void ServiceMsg::clear_logid() {
  logid_ = 0u;
}
 ::google::protobuf::uint32 ServiceMsg::logid() const {
  // @@protoc_insertion_point(field_get:services.ServiceMsg.LogId)
  return logid_;
}
 void ServiceMsg::set_logid(::google::protobuf::uint32 value) {
  
  logid_ = value;
  // @@protoc_insertion_point(field_set:services.ServiceMsg.LogId)
}

// optional int32 ReturnCode = 4;
void ServiceMsg::clear_returncode() {
  returncode_ = 0;
}
 ::google::protobuf::int32 ServiceMsg::returncode() const {
  // @@protoc_insertion_point(field_get:services.ServiceMsg.ReturnCode)
  return returncode_;
}
 void ServiceMsg::set_returncode(::google::protobuf::int32 value) {
  
  returncode_ = value;
  // @@protoc_insertion_point(field_set:services.ServiceMsg.ReturnCode)
}

// optional bytes Payload = 5;
void ServiceMsg::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ServiceMsg::payload() const {
  // @@protoc_insertion_point(field_get:services.ServiceMsg.Payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServiceMsg::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:services.ServiceMsg.Payload)
}
 void ServiceMsg::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:services.ServiceMsg.Payload)
}
 void ServiceMsg::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:services.ServiceMsg.Payload)
}
 ::std::string* ServiceMsg::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:services.ServiceMsg.Payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServiceMsg::release_payload() {
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServiceMsg::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:services.ServiceMsg.Payload)
}

// optional uint64 ClanId = 6;
void ServiceMsg::clear_clanid() {
  clanid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ServiceMsg::clanid() const {
  // @@protoc_insertion_point(field_get:services.ServiceMsg.ClanId)
  return clanid_;
}
 void ServiceMsg::set_clanid(::google::protobuf::uint64 value) {
  
  clanid_ = value;
  // @@protoc_insertion_point(field_set:services.ServiceMsg.ClanId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace services

// @@protoc_insertion_point(global_scope)
