// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services.proto

#ifndef PROTOBUF_services_2eproto__INCLUDED
#define PROTOBUF_services_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace services {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_services_2eproto();
void protobuf_AssignDesc_services_2eproto();
void protobuf_ShutdownFile_services_2eproto();

class ServiceMsg;

// ===================================================================

class ServiceMsg : public ::google::protobuf::Message {
 public:
  ServiceMsg();
  virtual ~ServiceMsg();

  ServiceMsg(const ServiceMsg& from);

  inline ServiceMsg& operator=(const ServiceMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceMsg& default_instance();

  void Swap(ServiceMsg* other);

  // implements Message ----------------------------------------------

  inline ServiceMsg* New() const { return New(NULL); }

  ServiceMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceMsg& from);
  void MergeFrom(const ServiceMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServiceMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 PlayerId = 1;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // optional uint32 ProtoId = 2;
  void clear_protoid();
  static const int kProtoIdFieldNumber = 2;
  ::google::protobuf::uint32 protoid() const;
  void set_protoid(::google::protobuf::uint32 value);

  // optional uint32 LogId = 3;
  void clear_logid();
  static const int kLogIdFieldNumber = 3;
  ::google::protobuf::uint32 logid() const;
  void set_logid(::google::protobuf::uint32 value);

  // optional int32 ReturnCode = 4;
  void clear_returncode();
  static const int kReturnCodeFieldNumber = 4;
  ::google::protobuf::int32 returncode() const;
  void set_returncode(::google::protobuf::int32 value);

  // optional bytes Payload = 5;
  void clear_payload();
  static const int kPayloadFieldNumber = 5;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // optional uint64 ClanId = 6;
  void clear_clanid();
  static const int kClanIdFieldNumber = 6;
  ::google::protobuf::uint64 clanid() const;
  void set_clanid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:services.ServiceMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 protoid_;
  ::google::protobuf::uint32 logid_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::uint64 clanid_;
  ::google::protobuf::int32 returncode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_services_2eproto();
  friend void protobuf_AssignDesc_services_2eproto();
  friend void protobuf_ShutdownFile_services_2eproto();

  void InitAsDefaultInstance();
  static ServiceMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ServiceMsg

// optional uint64 PlayerId = 1;
inline void ServiceMsg::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ServiceMsg::playerid() const {
  // @@protoc_insertion_point(field_get:services.ServiceMsg.PlayerId)
  return playerid_;
}
inline void ServiceMsg::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:services.ServiceMsg.PlayerId)
}

// optional uint32 ProtoId = 2;
inline void ServiceMsg::clear_protoid() {
  protoid_ = 0u;
}
inline ::google::protobuf::uint32 ServiceMsg::protoid() const {
  // @@protoc_insertion_point(field_get:services.ServiceMsg.ProtoId)
  return protoid_;
}
inline void ServiceMsg::set_protoid(::google::protobuf::uint32 value) {
  
  protoid_ = value;
  // @@protoc_insertion_point(field_set:services.ServiceMsg.ProtoId)
}

// optional uint32 LogId = 3;
inline void ServiceMsg::clear_logid() {
  logid_ = 0u;
}
inline ::google::protobuf::uint32 ServiceMsg::logid() const {
  // @@protoc_insertion_point(field_get:services.ServiceMsg.LogId)
  return logid_;
}
inline void ServiceMsg::set_logid(::google::protobuf::uint32 value) {
  
  logid_ = value;
  // @@protoc_insertion_point(field_set:services.ServiceMsg.LogId)
}

// optional int32 ReturnCode = 4;
inline void ServiceMsg::clear_returncode() {
  returncode_ = 0;
}
inline ::google::protobuf::int32 ServiceMsg::returncode() const {
  // @@protoc_insertion_point(field_get:services.ServiceMsg.ReturnCode)
  return returncode_;
}
inline void ServiceMsg::set_returncode(::google::protobuf::int32 value) {
  
  returncode_ = value;
  // @@protoc_insertion_point(field_set:services.ServiceMsg.ReturnCode)
}

// optional bytes Payload = 5;
inline void ServiceMsg::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServiceMsg::payload() const {
  // @@protoc_insertion_point(field_get:services.ServiceMsg.Payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceMsg::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:services.ServiceMsg.Payload)
}
inline void ServiceMsg::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:services.ServiceMsg.Payload)
}
inline void ServiceMsg::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:services.ServiceMsg.Payload)
}
inline ::std::string* ServiceMsg::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:services.ServiceMsg.Payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceMsg::release_payload() {
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceMsg::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:services.ServiceMsg.Payload)
}

// optional uint64 ClanId = 6;
inline void ServiceMsg::clear_clanid() {
  clanid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ServiceMsg::clanid() const {
  // @@protoc_insertion_point(field_get:services.ServiceMsg.ClanId)
  return clanid_;
}
inline void ServiceMsg::set_clanid(::google::protobuf::uint64 value) {
  
  clanid_ = value;
  // @@protoc_insertion_point(field_set:services.ServiceMsg.ClanId)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace services

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_services_2eproto__INCLUDED
